// import { render } from "@testing-library/react";
// import { useEffect, useState } from "react";
// import { Link } from "react-router-dom";
// // import axios from "axios";
// import { useParams } from "react-router-dom";
// import spotIDs from "../spotID-data";
// // import Spot from "./Spot";

// function Home() {
//   //Base URL
//   const beachFinder = `https://services.surfline.com/kbyg/spots/reports?spotId=`;

//   const [beachList, setBeachList] = useState([]);
//   const [beachData, setBeachData] = useState("");

//   //Gather data from the URL
//   const findBeach = async () => {
//     var arrayLength = spotIDs.length;
//     for (var i = 0; i < arrayLength; i++) {
//       fetch(beachFinder + spotIDs[i])
//         .then((res) => res.json())
//         .then((data) => {
//           console.log(data);
//           setBeachList(data);
//           setBeachData(data);
//         });
//     }
//   };
//   useEffect(() => {
//     findBeach();
//   }, [beachFinder]);

//   const fullList = beachData.map((item) => {
//     return (<h1>{item}</h1>);});

//   let displayData = null;
//   //Display Beach Data
//   if (beachData) {
//     displayData = (
//       <div>
//         <h1 id = "MainTitle" >{beachData.spot.name}</h1>
//         <p id = "description">{beachData.spot.travelDetails.description}</p>
//         <section id = "summary">
//             <p>summary:</p>
//             <p>01. crowd Factor: {beachData.spot.travelDetails.crowdFactor.description}</p>
//             <p>02. local Vibe: {beachData.spot.travelDetails.localVibe.description}</p>
//             <p>03. shoulder Burn: {beachData.spot.travelDetails.shoulderBurn.description}</p>
//             <p>04. spot Rating: {beachData.spot.travelDetails.spotRating.description}</p>
//             <p>05. water Quality: {beachData.spot.travelDetails.waterQuality.description}</p>
//         </section>
//         <h1>Currently:</h1>
//         <section id="currently">
//             <p>Conditions: {beachData.forecast.conditions.value}</p>
//             <p>
//                 Wave Range: {beachData.forecast.waveHeight.min} to{" "}
//                 {beachData.forecast.waveHeight.max} ft. - {beachData.forecast.waveHeight.humanRelation}
//             </p>
//             <p> Tide: {beachData.forecast.tide.current.type}</p>
//             <p> Water temp between {beachData.forecast.waterTemp.min} and {beachData.forecast.waterTemp.max}</p>
//             <p> Air Temp: {beachData.forecast.weather.temperature} F</p>
//         </section>
//       </div>
//     );
//   }

//   return <div>{displayData}{fullList}</div>;
// }

// export default Home;





/* --------------------------------------------------------------------TABLET-------------------------------------------------------------------- */
/* Medium devices (tablets, 768px and up) */
@media screen and (max-width: 768px) {
    /* ul li {
      display: none;
    }
    nav input:checked ~ ul li {
      display: inline-block;
    }
  
    body {
      padding: 2em;
    }
  
    .container {
      display: grid;
      grid-template-columns: 1fr;
      grid-template-rows: 4fr;
    }
    .main-content {
      display: grid;
      grid-template-columns: 1fr;
      grid-template-rows: 7fr;
    }
    .container .header {
      grid-column: 1;
      grid-row: 1;
    }
    .main-content .canvas {
      grid-column: 1;
      grid-row: 2;
    }
    .main-content .home {
      grid-column: 1;
      grid-row: 3;
    }
    .main-content .about {
      padding-top: 100px;
  
      grid-column: 1;
      grid-row: 4;
    }
    .main-content .projects {
      padding-top: 100px;
  
      grid-column: 1;
      grid-row: 5;
    }
    .main-content .contact {
      padding-top: 100px;
  
      grid-column: 1;
      grid-row: 6;
    }
    .main-content .footer {
      grid-column: 1;
      grid-row: 7;
    } */
    canvas {
      display: none;
    }
  
    ul li {
      display: none;
    }
    nav input:checked ~ ul li {
      display: inline-block;
    }
  
    .homepage {
      display: grid;
      grid-template-columns: 2fr;
      grid-template-rows: 2fr;
      grid-gap: 10px;
    }
    .homepage .navbar {
      grid-template-columns: 1fr;
      grid-template-rows: 1/2fr;
      grid-gap: 0px;
    }
    .homepage .container {
      display: grid;
      grid-template-columns: 2fr;
      grid-template-rows: 2fr;
      grid-gap: 10px;
    }
    .container .summary {
      padding-top: 16px;
      grid-column: 1fr;
      grid-row: 1fr;
    }
    .container .currently {
      grid-column: 2fr;
      grid-row: 2fr;
    }
  }
  /* --------------------------------------------------------------------DeskTop-------------------------------------------------------------------- */
  /* Large devices (tablets, 1024 and up) */
  @media screen and (min-width: 769px) {
    label {
      display: none;
    }
  
    /* use this one to move the nav container around */
    .nav-container {
      position: absolute;
      right: 0px;
      top: 0px;
    }
  
    /* Adjust the contents of the main title/subtitle */
    #MainTitle {
      font-size: 60px;
    }
    #slim-shady {
      font-size: 15px;
    }
    #title-subtext {
      font-size: 19px;
    }
    #home {
      padding-top: 70px;
      padding-left: 0px;
      padding-right: 0px;
      padding-bottom: 0px;
    }
    h2 {
      font-size: 32px;
    }
    html {
      margin: 0 auto;
    }
    body {
      font-size: 20px;
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
  
      /* Link below to how i solved my background sizing issues */
      /* https://stackoverflow.com/questions/16679221/how-to-set-a-minimum-width-with-background-size/16679437        width: auto; Scale the div to the parent width */
      height: 2000px; /* The div needs some height to be visible */
      background-size: 100%; /* Always size the image to the width of the div */
      background-position: top; /* Position the image to the top center of the div */
      background-size: 1500px 2200px; /* Force the image to its minimum width */
    }
  
    .container {
      display: grid;
      grid-template-columns: 1fr;
      grid-template-rows: 3fr;
      padding-bottom: 100px;
    }
    .main-content {
      padding-top: 250px;
      width: 810px;
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      grid-template-rows: 6fr;
      grid-gap: 0em;
    }
    .container .header {
      grid-column: 1;
      grid-row: 1;
    }
    .main-content .canvas {
      grid-column: 2/3;
      grid-row: 1/2;
    }
    .main-content .home {
      grid-column: 1/2;
      grid-row: 1/2;
    }
    .main-content .about {
      padding-top: 250px;
      grid-column: 1/3;
      grid-row: 2/3;
    }
    .main-content .projects {
      padding-top: 200px;
  
      grid-column: 1/3;
      grid-row: 3/4;
    }
    .main-content .contact {
      padding-top: 200px;
  
      grid-column: 1/3;
      grid-row: 4/5;
    }
    .container .footer {
      padding-top: 200px;
      grid-column: 1;
      grid-row: 3/4;
    }
  }
  
